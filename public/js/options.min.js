const blocklistContainer=document.getElementById("blocklistContainer"),blocklistEmpty=document.getElementById("blocklistEmpty");let deleteBtn=document.getElementsByClassName("btn-delete"),addWebsiteBtn=document.getElementById("addWebsiteBtn"),whitelistMode=document.getElementById("whitelistMode");var tooltipTriggerList=[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')),tooltipList=tooltipTriggerList.map((function(t){return new bootstrap.Tooltip(t)}));function getBlocklist(){return new Promise((t=>{chrome.storage.sync.get(["blocklist"],(function(e){t(e.blocklist)}))}))}function generateMathProblem(t=null){let e="",l=0,o=0,n=0,s="";return t||(t=Math.floor(3*Math.random())+1),o=Math.floor(Math.random()*Math.pow(10,t)),n=Math.floor(Math.random()*Math.pow(10,t)),Math.random()>.5?(s="+",l=o+n):(s="-",l=o-n),e=o+" "+s+" "+n+" = ",[e,l]}addWebsiteBtn.addEventListener("click",(async()=>{let t=await getBlocklist(),e=document.getElementById("websiteInput").value;e.includes("://")&&(e=e.split("://")[1]),await fetch(`http://${e}`).then((e=>{if(200===e.status){let l=new URL(e.url);t.includes(l.hostname)||(t.push(l.hostname),chrome.storage.sync.set({blocklist:t}),location.reload())}else alert("Invalid URL")})).catch((t=>{alert("Invalid URL")}))})),chrome.storage.sync.get("blocklist",(function(t){let e=t.blocklist,l="";for(let t=0;t<e.length;t++)l+='<div class="d-flex align-items-center user-select-none">',l+=`<img src="http://www.google.com/s2/favicons?domain=${e[t]}" class="img-thumbnail" alt="..." style="height: 30px;">`,l+=`<p class="m-0 ms-2">${e[t]}</p>`,l+=`<button type="button" class="btn btn-sm btn-light border btn-delete ms-auto" data-item="${e[t]}"><i class="bi bi-trash3"></i></button>`,l+="</div>",l+="<hr>";l?(blocklistEmpty.classList.add("d-none"),blocklistContainer.classList.remove("d-none"),blocklistContainer.innerHTML=l):(blocklistEmpty.classList.remove("d-none"),blocklistContainer.classList.add("d-none"));for(let t=0;t<deleteBtn.length;t++)deleteBtn[t].addEventListener("click",(function(){let t=this.getAttribute("data-item");chrome.storage.sync.get("blocklist",(function(e){let l=e.blocklist,o=l.indexOf(t);l.splice(o,1),chrome.storage.sync.set({blocklist:l}),location.reload()}))}))})),chrome.storage.sync.get("isWhitelist",(function(t){t.isWhitelist&&(whitelistMode.checked=!0)})),whitelistMode.addEventListener("change",(function(){chrome.storage.sync.set({isWhitelist:this.checked})}));let problem=generateMathProblem();